@model PhoneBookMvc.Models.ContactCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; border-bottom:1px solid #ff0000">NEW CONTACT</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary()
        @Html.Label("Icon")<br />

        <img id="output" width="75" height="75" src="~/Content/Images/Banks_Icons/DefaultBankIco.jpg" />

        @Html.TextBox("Ico", "", new { type = "file", onchange = "loadFile(event)", style = "visibility:hidden;" })

        <button type="button" class="btn_add btn btn-xs" onclick="document.getElementById('Ico').click()"><img class="middleIco" src="~/Content/Icons/change-ico.png" /> Change icon</button>
        <button type="button" class="btn_cancel btn btn-xs" onclick='document.getElementById("output").src ="/Content/Images/Banks_Icons/DefaultBankIco.jpg"'><img class="middleIco" src="~/Content/Icons/delete-ico.png" />Set default ico</button>
        <br />
        <br />
        <button type="button" class="btn_cancel btn btn-xs" onclick="history.back()"><img class="smallIco" src="~/Content/Icons/cancel-ico.png" /> Cancel</button>

        <div class="form-group">
            @Html.Label("Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phonenumber1.Number, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. 077123456" } })
                @Html.ValidationMessageFor(model => model.phonenumber1.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.contactvm.ContactId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contactvm.ContactId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.contactvm.ContactId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.contactvm.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contactvm.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. John" } })
                @Html.ValidationMessageFor(model => model.contactvm.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contactvm.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contactvm.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. Smith" } })
                @Html.ValidationMessageFor(model => model.contactvm.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contactvm.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contactvm.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. someone@mail.com" } })
                @Html.ValidationMessageFor(model => model.contactvm.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contactvm.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contactvm.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. London, Baker st. 7/4" } })
                @Html.ValidationMessageFor(model => model.contactvm.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.contactvm.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contactvm.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.contactvm.ImagePath, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <p>You can add another phone numbers</p>
        <div class="form-group">
            @Html.Label("Number 2", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phonenumber2.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phonenumber2.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Number 3", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phonenumber3.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phonenumber3.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}


